#ifndef BUILTINS_H_
#define BUILTINS_H_
#include <string>

namespace builtins {

const std::string variables[] = {
    "Reflect",
    "timesAccessed",
    "console",
    "os",
    "performance",
    "scriptArgs",
    "scriptPath",
    "variables",
    "functions",
    "methods",
    "top",
    "undefined",
    "JSON",
    "Math",
    "NaN",
    "StopIteration",
    "Intl",
    "__proto__",
    "file",
    "path",
    "mozMemory",
    "gc",
    "gcBytes",
    "gcMaxBytes",
    "mallocBytesRemaining",
    "maxMalloc",
    "gcIsHighFrequencyMode",
    "gcNumber",
    "majorGCCount",
    "minorGCCount",
    "zone",
    "gcTriggerBytes",
    "gcAllocTrigger",
    "delayBytes",
    "heapGrowthFactor",
    "length",
    "E",
    "LOG2E",
    "LOG10E",
    "LN2",
    "LN10",
    "PI",
    "SQRT2",
    "SQRT1_2",
};

const std::string functions[] = {
    "Function",
    "Object",
    "eval",
    "Debugger",
    "PerfMeasurement",
    "version",
    "options",
    "load",
    "loadRelativeToScript",
    "evaluate",
    "run",
    "readline",
    "print",
    "printErr",
    "putstr",
    "dateNow",
    "help",
    "quit",
    "assertEq",
    "startTimingMutator",
    "stopTimingMutator",
    "throwError",
    "intern",
    "getslx",
    "evalcx",
    "evalInWorker",
    "getSharedArrayBuffer",
    "setSharedArrayBuffer",
    "shapeOf",
    "sleep",
    "compile",
    "parseModule",
    "setModuleResolveHook",
    "getModuleLoadPath",
    "parse",
    "syntaxParse",
    "offThreadCompileScript",
    "runOffThreadScript",
    "timeout",
    "interruptIf",
    "invokeInterruptCallback",
    "setInterruptCallback",
    "enableLastWarning",
    "disableLastWarning",
    "getLastWarning",
    "clearLastWarning",
    "elapsed",
    "decompileFunction",
    "decompileThis",
    "thisFilename",
    "newGlobal",
    "createMappedArrayBuffer",
    "getMaxArgs",
    "objectEmulatingUndefined",
    "isCachingEnabled",
    "setCachingEnabled",
    "cacheEntry",
    "printProfilerEvents",
    "enableSingleStepProfiling",
    "disableSingleStepProfiling",
    "isLatin1",
    "stackPointerInfo",
    "entryPoints",
    "gc",
    "minorgc",
    "gcparam",
    "relazifyFunctions",
    "getBuildConfiguration",
    "hasChild",
    "setSavedStacksRNGState",
    "getSavedFrameCount",
    "saveStack",
    "callFunctionFromNativeFrame",
    "callFunctionWithAsyncStack",
    "enableTrackAllocations",
    "disableTrackAllocations",
    "makeFakePromise",
    "settleFakePromise",
    "makeFinalizeObserver",
    "finalizeCount",
    "gcPreserveCode",
    "startgc",
    "gcslice",
    "abortgc",
    "validategc",
    "fullcompartmentchecks",
    "nondeterministicGetWeakMapKeys",
    "internalConst",
    "isProxy",
    "dumpHeap",
    "terminate",
    "enableSPSProfiling",
    "enableSPSProfilingWithSlowAssertions",
    "disableSPSProfiling",
    "readSPSProfilingStack",
    "enableOsiPointRegisterChecks",
    "displayName",
    "isAsmJSCompilationAvailable",
    "isSimdAvailable",
    "getJitCompilerOptions",
    "isAsmJSModule",
    "isAsmJSModuleLoadedFromCache",
    "isAsmJSFunction",
    "isLazyFunction",
    "isRelazifiableFunction",
    "enableShellObjectMetadataCallback",
    "getObjectMetadata",
    "bailout",
    "inJit",
    "inIon",
    "assertJitStackInvariants",
    "setJitCompilerOption",
    "setIonCheckGraphCoherency",
    "serialize",
    "deserialize",
    "neuter",
    "helperThreadCount",
    "startTraceLogger",
    "stopTraceLogger",
    "reportOutOfMemory",
    "reportLargeAllocationFailure",
    "findPath",
    "evalReturningScope",
    "cloneAndExecuteScript",
    "backtrace",
    "getBacktrace",
    "byteSize",
    "byteSizeOfScript",
    "immutablePrototypesEnabled",
    "setImmutablePrototype",
    "setLazyParsingDisabled",
    "setDiscardSource",
    "getConstructorName",
    "allocationMarker",
    "setGCCallback",
    "setARMHwCapFlags",
    "getLcovInfo",
    "getModuleEnvironmentNames",
    "getModuleEnvironmentValue",
    "clone",
    "getSelfHostedValue",
    "line2pc",
    "pc2line",
    "nestedShell",
    "assertFloat32",
    "assertRecoveredOnBailout",
    "withSourceHook",
    "wrapWithProto",
    "trackedOpts",
    "read",
    "snarf",
    "readRelativeToScript",
    "redirect",
    "FakeDOMObject",
    "Array",
    "extractBuiltins",
    "Set",
    "Boolean",
    "Date",
    "isNaN",
    "isFinite",
    "parseInt",
    "parseFloat",
    "Number",
    "String",
    "escape",
    "unescape",
    "uneval",
    "decodeURI",
    "encodeURI",
    "decodeURIComponent",
    "encodeURIComponent",
    "RegExp",
    "Error",
    "InternalError",
    "EvalError",
    "RangeError",
    "ReferenceError",
    "SyntaxError",
    "TypeError",
    "URIError",
    "Iterator",
    "ArrayBuffer",
    "Int8Array",
    "Uint8Array",
    "Int16Array",
    "Uint16Array",
    "Int32Array",
    "Uint32Array",
    "Float32Array",
    "Float64Array",
    "Uint8ClampedArray",
    "Proxy",
    "WeakMap",
    "Map",
    "DataView",
    "Symbol",
    "WeakSet",
};

const std::string methods[] = {
    "apply",
    "construct",
    "defineProperty",
    "deleteProperty",
    "get",
    "getOwnPropertyDescriptor",
    "getPrototypeOf",
    "has",
    "isExtensible",
    "ownKeys",
    "preventExtensions",
    "set",
    "setPrototypeOf",
    "parse",
    "toSource",
    "toString",
    "valueOf",
    "watch",
    "unwatch",
    "hasOwnProperty",
    "isPrototypeOf",
    "propertyIsEnumerable",
    "constructor",
    "toLocaleString",
    "__defineGetter__",
    "__defineSetter__",
    "__lookupGetter__",
    "__lookupSetter__",
    "log",
    "getenv",
    "getpid",
    "system",
    "spawn",
    "kill",
    "waitpid",
    "readFile",
    "readRelativeToScript",
    "writeTypedArrayToFile",
    "redirect",
    "isAbsolute",
    "join",
    "reverse",
    "sort",
    "push",
    "pop",
    "shift",
    "unshift",
    "splice",
    "concat",
    "slice",
    "lastIndexOf",
    "indexOf",
    "forEach",
    "map",
    "filter",
    "reduce",
    "reduceRight",
    "some",
    "every",
    "find",
    "findIndex",
    "copyWithin",
    "fill",
    "entries",
    "keys",
    "includes",
    "stringify",
    "abs",
    "acos",
    "asin",
    "atan",
    "atan2",
    "ceil",
    "clz32",
    "cos",
    "exp",
    "floor",
    "imul",
    "fround",
    "max",
    "min",
    "pow",
    "random",
    "round",
    "sin",
    "sqrt",
    "tan",
    "log10",
    "log2",
    "log1p",
    "expm1",
    "cosh",
    "sinh",
    "tanh",
    "acosh",
    "asinh",
    "atanh",
    "hypot",
    "trunc",
    "sign",
    "cbrt",
    "Collator",
    "NumberFormat",
    "DateTimeFormat",
};
};  // namespace builtins

#endif  // ifndef BUILTINS_H_